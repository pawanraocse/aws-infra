spring:
  application:
    name: auth-service

  datasource:
    url: jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_NAME:authdb}
    username: ${DB_USERNAME:postgres}
    password: ${DB_PASSWORD:postgres}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 10
      minimum-idle: 5
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000

  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        format_sql: true
        jdbc:
          batch_size: 20
        order_inserts: true
        order_updates: true

  flyway:
    enabled: true
    baseline-on-migrate: true
    locations: classpath:db/migration
    schemas: public

  security:
    oauth2:
      client:
        registration:
          cognito:
            client-id: ${COGNITO_CLIENT_ID}
            client-secret: ${COGNITO_CLIENT_SECRET}
            scope:
              - openid
              - email
              - profile
              - phone
              - aws.cognito.signin.user.admin
            redirect-uri: ${COGNITO_REDIRECT_URI:http://localhost:8081/login/oauth2/code/cognito}
            authorization-grant-type: authorization_code
            client-name: Cognito
        provider:
          cognito:
            issuer-uri: ${COGNITO_ISSUER_URI}
            user-name-attribute: username

# Cognito configuration
cognito:
  user-pool-id: ${COGNITO_USER_POOL_ID}
  client-id: ${COGNITO_CLIENT_ID}
  domain: ${COGNITO_DOMAIN}
  region: ${AWS_REGION:us-east-1}
  logout-redirect-url: ${COGNITO_LOGOUT_REDIRECT_URL:http://localhost:8081/logged-out}

server:
  port: ${SERVER_PORT:8081}

# Eureka Client
eureka:
  client:
    service-url:
      defaultZone: ${EUREKA_URI:http://localhost:8761/eureka}
    register-with-eureka: true
    fetch-registry: true
    registry-fetch-interval-seconds: 30

  instance:
    prefer-ip-address: ${EUREKA_INSTANCE_PREFER_IP_ADDRESS:false}
    hostname: ${EUREKA_INSTANCE_HOSTNAME:localhost}
    lease-renewal-interval-in-seconds: 30
    lease-expiration-duration-in-seconds: 90
    metadata-map:
      version: ${project.version:1.0.0}
      region: ${AWS_REGION:us-east-1}

management:
  endpoints:
    web:
      exposure:
        include: health,info
      base-path: /actuator
  endpoint:
    health:
      show-details: when-authorized

# Logging
logging:
  level:
    root: INFO
    com.learning.authservice: DEBUG
    org.springframework.security: INFO
    org.springframework.web: INFO
