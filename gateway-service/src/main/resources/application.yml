spring:
  application:
    name: gateway-service

  cloud:
    gateway:
      discovery:
        locator:
          enabled: true
          lower-case-service-id: true

      # Global filters
      default-filters:
        - name: JwtAuthenticationFilter
        - name: Retry
          args:
            retries: 3
            statuses: BAD_GATEWAY,SERVICE_UNAVAILABLE
            methods: GET,POST,PUT,DELETE
            backoff:
              firstBackoff: 100ms
              maxBackoff: 500ms
              factor: 2
        - name: CircuitBreaker
          args:
            name: defaultCircuitBreaker
            fallbackUri: forward:/fallback

      # Global CORS
      globalcors:
        cors-configurations:
          '[/**]':
            allowedOrigins: ${CORS_ALLOWED_ORIGINS:http://localhost:4200}
            allowedMethods:
              - GET
              - POST
              - PUT
              - DELETE
              - PATCH
              - OPTIONS
            allowedHeaders: "*"
            allowCredentials: true
            maxAge: 3600

  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${COGNITO_ISSUER_URI}
          jwk-set-uri: ${COGNITO_ISSUER_URI}/.well-known/jwks.json

server:
  port: ${SERVER_PORT:8080}

  # Netty configuration
  netty:
    connection-timeout: 20s
    idle-timeout: 60s

# Eureka Client
eureka:
  client:
    service-url:
      defaultZone: ${EUREKA_URI:http://localhost:8761/eureka}
    register-with-eureka: true
    fetch-registry: true
    registry-fetch-interval-seconds: 30

  instance:
    prefer-ip-address: ${EUREKA_INSTANCE_PREFER_IP_ADDRESS:false}
    hostname: ${EUREKA_INSTANCE_HOSTNAME:localhost}
    lease-renewal-interval-in-seconds: 30
    lease-expiration-duration-in-seconds: 90
    metadata-map:
      version: ${project.version:1.0.0}
      region: ${AWS_REGION:us-east-1}

# Resilience4j Circuit Breaker
resilience4j:
  circuitbreaker:
    configs:
      default:
        sliding-window-size: 10
        minimum-number-of-calls: 5
        permitted-number-of-calls-in-half-open-state: 3
        wait-duration-in-open-state: 30s
        failure-rate-threshold: 50
        slow-call-rate-threshold: 50
        slow-call-duration-threshold: 5s

    instances:
      authServiceCircuitBreaker:
        base-config: default
      backendServiceCircuitBreaker:
        base-config: default

  timelimiter:
    configs:
      default:
        timeout-duration: 10s

# Distributed Tracing
management:
  tracing:
    sampling:
      probability: ${TRACING_PROBABILITY:1.0}

  zipkin:
    tracing:
      endpoint: ${ZIPKIN_URL:http://localhost:9411}/api/v2/spans

  endpoints:
    web:
      exposure:
        include: health,info,metrics,gateway,prometheus
      base-path: /actuator

  endpoint:
    health:
      show-details: when-authorized
      probes:
        enabled: true
    gateway:
      enabled: true

  metrics:
    tags:
      application: ${spring.application.name}
    export:
      prometheus:
        enabled: true

# Logging
logging:
  level:
    root: INFO
    com.learning.gateway: DEBUG
    org.springframework.cloud.gateway: INFO
    org.springframework.security: INFO
    reactor.netty: INFO

  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %logger{36} - %msg%n"
    level: '%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]'

# CORS configuration
cors:
  allowed-origins: ${CORS_ALLOWED_ORIGINS:http://localhost:4200}
